diff --git a/lib/comgr/src/comgr-compiler.cpp b/lib/comgr/src/comgr-compiler.cpp
index 94356d2..eccbd82 100644
--- a/lib/comgr/src/comgr-compiler.cpp
+++ b/lib/comgr/src/comgr-compiler.cpp
@@ -358,9 +358,7 @@ static bool ExecuteAssembler(AssemblerInvocation &Opts,
   std::unique_ptr<MCRegisterInfo> MRI(TheTarget->createMCRegInfo(Opts.Triple));
   assert(MRI && "Unable to create target register info!");
 
-  llvm::MCTargetOptions MCOptions;
-  std::unique_ptr<MCAsmInfo> MAI(
-      TheTarget->createMCAsmInfo(*MRI, Opts.Triple, MCOptions));
+  std::unique_ptr<MCAsmInfo> MAI(TheTarget->createMCAsmInfo(*MRI, Opts.Triple));
   assert(MAI && "Unable to create target asm info!");
 
   // Ensure MCAsmInfo initialization occurs before any use, otherwise sections
@@ -564,7 +562,7 @@ static amd_comgr_status_t linkWithLLD(llvm::ArrayRef<const char *> Args,
   ArrayRef<const char *> ArgRefs = llvm::makeArrayRef(LLDArgs);
   static std::mutex MScreen;
   MScreen.lock();
-  bool LLDRet = lld::elf::link(ArgRefs, false, LogS, LogE);
+  bool LLDRet = lld::elf::link(ArgRefs, false, LogS);
   MScreen.unlock();
   if (!LLDRet)
     return AMD_COMGR_STATUS_ERROR;
@@ -615,7 +613,6 @@ amd_comgr_status_t InProcessDriver::execute(ArrayRef<const char *> Args) {
         logArgv(DiagOS, "clang", Argv);
       std::unique_ptr<CompilerInstance> Clang(new CompilerInstance());
       Clang->createDiagnostics(DiagClient, /* ShouldOwnClient */ false);
-      Clang->setVerboseOutputStream(DiagOS);
       if (!Clang->hasDiagnostics())
         return AMD_COMGR_STATUS_ERROR;
       if (!CompilerInvocation::CreateFromArgs(
diff --git a/lib/comgr/src/comgr-disassembly.cpp b/lib/comgr/src/comgr-disassembly.cpp
index 5008c29..b7ba51a 100644
--- a/lib/comgr/src/comgr-disassembly.cpp
+++ b/lib/comgr/src/comgr-disassembly.cpp
@@ -76,9 +76,7 @@ DisassemblyInfo::create(const TargetIdentifier &Ident,
   if (!MRI)
     return AMD_COMGR_STATUS_ERROR;
 
-  llvm::MCTargetOptions MCOptions;
-  std::unique_ptr<const MCAsmInfo> MAI(
-      TheTarget->createMCAsmInfo(*MRI, TT, MCOptions));
+  std::unique_ptr<const MCAsmInfo> MAI(TheTarget->createMCAsmInfo(*MRI, TT));
   if (!MAI)
     return AMD_COMGR_STATUS_ERROR;
 
diff --git a/lib/comgr/src/comgr-objdump.cpp b/lib/comgr/src/comgr-objdump.cpp
index f5a7ff7..a0936f2 100644
--- a/lib/comgr/src/comgr-objdump.cpp
+++ b/lib/comgr/src/comgr-objdump.cpp
@@ -1200,9 +1200,8 @@ void llvm::DisassemHelper::DisassembleObject(const ObjectFile *Obj,
                  "no register info for target " + TripleName);
 
   // Set up disassembler.
-  llvm::MCTargetOptions MCOptions;
   std::unique_ptr<const MCAsmInfo> AsmInfo(
-      TheTarget->createMCAsmInfo(*MRI, TripleName, MCOptions));
+      TheTarget->createMCAsmInfo(*MRI, TripleName));
   if (!AsmInfo)
     report_error(Obj->getFileName(),
                  "no assembly info for target " + TripleName);
